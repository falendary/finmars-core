# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-04-25 09:12
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Counterparty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_code', models.CharField(blank=True, max_length=25, null=True, verbose_name='user code')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('short_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='short name')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
            ],
            options={
                'verbose_name': 'counterparty',
                'verbose_name_plural': 'counterparties',
                'permissions': [('view_counterparty', 'Can view counterparty')],
            },
        ),
        migrations.CreateModel(
            name='CounterpartyAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value_string', models.CharField(blank=True, max_length=255, null=True, verbose_name='value (String)')),
                ('value_float', models.FloatField(blank=True, null=True, verbose_name='value (Float)')),
                ('value_date', models.DateField(blank=True, null=True, verbose_name='value (Date)')),
            ],
            options={
                'verbose_name': 'counterparty attribute',
                'verbose_name_plural': 'counterparty attributes',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CounterpartyAttributeType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_code', models.CharField(blank=True, max_length=25, null=True, verbose_name='user code')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('short_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='short name')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('value_type', models.PositiveSmallIntegerField(choices=[(20, 'Number'), (10, 'String'), (40, 'Date'), (30, 'Classifier')], default=10, verbose_name='value type')),
                ('order', models.IntegerField(default=0, verbose_name='order')),
            ],
            options={
                'verbose_name': 'counterparty attribute type',
                'verbose_name_plural': 'counterparty attribute types',
            },
        ),
        migrations.CreateModel(
            name='CounterpartyAttributeTypeGroupObjectPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'counterparty attribute types - group permission',
                'verbose_name_plural': 'counterparty attribute types - group permissions',
            },
        ),
        migrations.CreateModel(
            name='CounterpartyAttributeTypeOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_hidden', models.BooleanField(default=False, verbose_name='is hidden')),
            ],
            options={
                'verbose_name': 'counterparty attribute types - option',
                'verbose_name_plural': 'counterparty attribute types - options',
            },
        ),
        migrations.CreateModel(
            name='CounterpartyAttributeTypeUserObjectPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'counterparty attribute types - user permission',
                'verbose_name_plural': 'counterparty attribute types - user permissions',
            },
        ),
        migrations.CreateModel(
            name='CounterpartyClassifier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_code', models.CharField(blank=True, max_length=25, null=True, verbose_name='user code')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('short_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='short name')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
            ],
            options={
                'verbose_name': 'counterparty classifier',
                'verbose_name_plural': 'counterparty classifiers',
                'permissions': [('view_counterpartyclassifier', 'Can view counterparty classifier')],
            },
            managers=[
                ('_default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='CounterpartyClassifierGroupObjectPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'counterparty classifiers - group permission',
                'verbose_name_plural': 'counterparty classifiers - group permissions',
            },
        ),
        migrations.CreateModel(
            name='CounterpartyClassifierUserObjectPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'counterparty classifiers - user permission',
                'verbose_name_plural': 'counterparty classifiers - user permissions',
            },
        ),
        migrations.CreateModel(
            name='CounterpartyGroupObjectPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'counterparties - group permission',
                'verbose_name_plural': 'counterparties - group permissions',
            },
        ),
        migrations.CreateModel(
            name='CounterpartyUserObjectPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'counterparties - user permission',
                'verbose_name_plural': 'counterparties - user permissions',
            },
        ),
        migrations.CreateModel(
            name='Responsible',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_code', models.CharField(blank=True, max_length=25, null=True, verbose_name='user code')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('short_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='short name')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
            ],
            options={
                'verbose_name': 'responsible',
                'verbose_name_plural': 'responsibles',
                'permissions': [('view_responsible', 'Can view responsible')],
            },
        ),
        migrations.CreateModel(
            name='ResponsibleAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value_string', models.CharField(blank=True, max_length=255, null=True, verbose_name='value (String)')),
                ('value_float', models.FloatField(blank=True, null=True, verbose_name='value (Float)')),
                ('value_date', models.DateField(blank=True, null=True, verbose_name='value (Date)')),
            ],
            options={
                'verbose_name': 'responsible attribute',
                'verbose_name_plural': 'responsible attributes',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResponsibleAttributeType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_code', models.CharField(blank=True, max_length=25, null=True, verbose_name='user code')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('short_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='short name')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('value_type', models.PositiveSmallIntegerField(choices=[(20, 'Number'), (10, 'String'), (40, 'Date'), (30, 'Classifier')], default=10, verbose_name='value type')),
                ('order', models.IntegerField(default=0, verbose_name='order')),
            ],
            options={
                'verbose_name': 'responsible attribute type',
                'verbose_name_plural': 'responsible attribute types',
            },
        ),
        migrations.CreateModel(
            name='ResponsibleAttributeTypeGroupObjectPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'responsible attribute types - group permission',
                'verbose_name_plural': 'responsible attribute types - group permissions',
            },
        ),
        migrations.CreateModel(
            name='ResponsibleAttributeTypeOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_hidden', models.BooleanField(default=False, verbose_name='is hidden')),
            ],
            options={
                'verbose_name': 'responsible attribute types - option',
                'verbose_name_plural': 'responsible attribute types - options',
            },
        ),
        migrations.CreateModel(
            name='ResponsibleAttributeTypeUserObjectPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'responsible attribute types - user permission',
                'verbose_name_plural': 'responsible attribute types - user permissions',
            },
        ),
        migrations.CreateModel(
            name='ResponsibleClassifier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_code', models.CharField(blank=True, max_length=25, null=True, verbose_name='user code')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('short_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='short name')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
            ],
            options={
                'verbose_name': 'responsible classifier',
                'verbose_name_plural': 'responsible classifiers',
                'permissions': [('view_responsibleclassifier', 'Can view responsible classifier')],
            },
            managers=[
                ('_default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ResponsibleClassifierGroupObjectPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'responsible classifiers - group permission',
                'verbose_name_plural': 'responsible classifiers - group permissions',
            },
        ),
        migrations.CreateModel(
            name='ResponsibleClassifierUserObjectPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'responsible classifiers - user permission',
                'verbose_name_plural': 'responsible classifiers - user permissions',
            },
        ),
        migrations.CreateModel(
            name='ResponsibleGroupObjectPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'responsibles - group permission',
                'verbose_name_plural': 'responsibles - group permissions',
            },
        ),
        migrations.CreateModel(
            name='ResponsibleUserObjectPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_object_permissions', to='counterparties.Responsible', verbose_name='content object')),
            ],
            options={
                'verbose_name': 'responsibles - user permission',
                'verbose_name_plural': 'responsibles - user permissions',
            },
        ),
    ]

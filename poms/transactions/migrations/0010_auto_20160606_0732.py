# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-06-06 07:32
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('instruments', '0013_auto_20160601_0957'),
        ('accounts', '0011_auto_20160531_0610'),
        ('strategies', '0007_auto_20160531_0610'),
        ('currencies', '0008_auto_20160531_0610'),
        ('transactions', '0009_auto_20160531_0619'),
    ]

    operations = [
        migrations.CreateModel(
            name='TransactionTypeAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'action',
                'verbose_name_plural': 'actions',
            },
        ),
        migrations.AlterField(
            model_name='transactiontypeinput',
            name='value_type',
            field=models.PositiveSmallIntegerField(choices=[(20, 'Number'), (10, 'String'), (40, 'Date'), (30, 'Expression'), (110, 'Account'), (120, 'Instrument'), (130, 'Currency'), (140, 'Counterparty'), (150, 'Responsible'), (161, 'Strategy 1'), (162, 'Strategy 2'), (163, 'Strategy 3'), (170, 'Daily pricing model'), (180, 'Payment size detail'), (190, 'Instrument type')], default=20, verbose_name='value type'),
        ),
        migrations.AlterUniqueTogether(
            name='transactiontypeinput',
            unique_together=set([('transaction_type', 'name')]),
        ),
        migrations.CreateModel(
            name='TransactionTypeActionInstrument',
            fields=[
                ('transactiontypeaction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='transactions.TransactionTypeAction')),
                ('price_multiplier', models.CharField(blank=True, default='0.', max_length=255)),
                ('accrued_multiplier', models.CharField(default='0.', max_length=255)),
                ('default_price', models.CharField(default='0.', max_length=255)),
                ('default_accrued', models.CharField(default='0.', max_length=255)),
                ('accrued_currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='currencies.Currency')),
                ('accrued_currency_input', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='transactions.TransactionTypeInput')),
                ('daily_pricing_model', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='instruments.DailyPricingModel')),
                ('daily_pricing_model_input', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='transactions.TransactionTypeInput')),
                ('instrument_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='instruments.InstrumentType')),
                ('instrument_type_input', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='transactions.TransactionTypeInput')),
                ('payment_size_detail', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='instruments.PaymentSizeDetail')),
                ('payment_size_detail_input', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='transactions.TransactionTypeInput')),
                ('pricing_currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='currencies.Currency')),
                ('pricing_currency_input', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='transactions.TransactionTypeInput')),
            ],
            options={
                'verbose_name': 'action instrument',
                'verbose_name_plural': 'action instruments',
            },
            bases=('transactions.transactiontypeaction',),
        ),
        migrations.CreateModel(
            name='TransactionTypeActionTransaction',
            fields=[
                ('transactiontypeaction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='transactions.TransactionTypeAction')),
                ('position_size_with_sign', models.CharField(default='0.', max_length=255)),
                ('cash_consideration', models.CharField(default='0.', max_length=255)),
                ('principal_with_sign', models.CharField(default='0.', max_length=255)),
                ('carry_with_sign', models.CharField(default='0.', max_length=255)),
                ('overheads_with_sign', models.CharField(default='0.', max_length=255)),
                ('accounting_date', models.CharField(default='now()', max_length=255)),
                ('cash_date', models.CharField(default='now()', max_length=255)),
                ('account_cash', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='accounts.Account')),
                ('account_cash_input', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='transactions.TransactionTypeInput')),
                ('account_interim', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='accounts.Account')),
                ('account_interim_input', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='transactions.TransactionTypeInput')),
                ('account_position', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='accounts.Account')),
                ('account_position_input', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='transactions.TransactionTypeInput')),
                ('instrument', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='instruments.Instrument')),
                ('instrument_input', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='transactions.TransactionTypeInput')),
                ('settlement_currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='currencies.Currency')),
                ('settlement_currency_input', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='transactions.TransactionTypeInput')),
                ('strategy1_cash', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='strategies.Strategy1')),
                ('strategy1_cash_input', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='transactions.TransactionTypeInput')),
                ('strategy1_position', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='strategies.Strategy1')),
                ('strategy1_position_input', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='transactions.TransactionTypeInput')),
                ('strategy2_cash', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='strategies.Strategy2')),
                ('strategy2_cash_input', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='transactions.TransactionTypeInput')),
                ('strategy2_position', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='strategies.Strategy2')),
                ('strategy2_position_input', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='transactions.TransactionTypeInput')),
                ('strategy3_cash', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='strategies.Strategy3')),
                ('strategy3_cash_input', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='transactions.TransactionTypeInput')),
                ('strategy3_position', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='strategies.Strategy3')),
                ('strategy3_position_input', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='transactions.TransactionTypeInput')),
                ('transaction_class', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='transactions.TransactionClass')),
                ('transaction_currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='currencies.Currency')),
                ('transaction_currency_input', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='transactions.TransactionTypeInput')),
            ],
            options={
                'verbose_name': 'action transaction',
                'verbose_name_plural': 'action transactions',
            },
            bases=('transactions.transactiontypeaction',),
        ),
        migrations.AddField(
            model_name='transactiontypeaction',
            name='transaction_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='actions', to='transactions.TransactionType'),
        ),
        migrations.AlterUniqueTogether(
            name='transactiontypeaction',
            unique_together=set([('transaction_type', 'order')]),
        ),
    ]

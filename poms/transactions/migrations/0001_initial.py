# -*- coding: utf-8 -*-
# Generated by Django 1.9.9 on 2016-08-24 05:30
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import mptt.fields
import poms.common.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('portfolios', '0002_auto_20160824_0530'),
        ('counterparties', '0002_auto_20160824_0530'),
        ('users', '0001_initial'),
        ('instruments', '0002_auto_20160824_0530'),
        ('strategies', '0002_auto_20160824_0530'),
        ('auth', '0007_alter_validators_add_error_messages'),
        ('accounts', '0002_auto_20160824_0530'),
        ('currencies', '0002_auto_20160824_0530'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='ActionClass',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False, verbose_name='ID')),
                ('system_code', models.CharField(max_length=255, unique=True, verbose_name='system code')),
                ('name_en', models.CharField(blank=True, default='', max_length=255, verbose_name='name (en)')),
                ('name_ru', models.CharField(blank=True, default='', max_length=255, verbose_name='name (ru)')),
                ('name_es', models.CharField(blank=True, default='', max_length=255, verbose_name='name (es)')),
                ('name_de', models.CharField(blank=True, default='', max_length=255, verbose_name='name (de)')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='description (en)')),
                ('description_ru', models.TextField(blank=True, default='', verbose_name='description (ru)')),
                ('description_es', models.TextField(blank=True, default='', verbose_name='description (es)')),
                ('description_de', models.TextField(blank=True, default='', verbose_name='description (de)')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'action class',
                'verbose_name_plural': 'action classes',
            },
        ),
        migrations.CreateModel(
            name='ComplexTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'complex transaction',
                'verbose_name_plural': 'complex transactions',
            },
        ),
        migrations.CreateModel(
            name='EventClass',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False, verbose_name='ID')),
                ('system_code', models.CharField(max_length=255, unique=True, verbose_name='system code')),
                ('name_en', models.CharField(blank=True, default='', max_length=255, verbose_name='name (en)')),
                ('name_ru', models.CharField(blank=True, default='', max_length=255, verbose_name='name (ru)')),
                ('name_es', models.CharField(blank=True, default='', max_length=255, verbose_name='name (es)')),
                ('name_de', models.CharField(blank=True, default='', max_length=255, verbose_name='name (de)')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='description (en)')),
                ('description_ru', models.TextField(blank=True, default='', verbose_name='description (ru)')),
                ('description_es', models.TextField(blank=True, default='', verbose_name='description (es)')),
                ('description_de', models.TextField(blank=True, default='', verbose_name='description (de)')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'event class',
                'verbose_name_plural': 'event classes',
            },
        ),
        migrations.CreateModel(
            name='EventToHandle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_code', models.CharField(blank=True, max_length=25, null=True, verbose_name='user code')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('short_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='short name')),
                ('public_name', models.CharField(blank=True, help_text='used if user does not have permissions to view object', max_length=255, null=True, verbose_name='public name')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('notification_date', models.DateField(blank=True, null=True, verbose_name='notification date')),
                ('effective_date', models.DateField(blank=True, null=True, verbose_name='effective date')),
                ('master_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events_to_handle', to='users.MasterUser', verbose_name='master user')),
            ],
            options={
                'verbose_name_plural': 'events to handle',
                'abstract': False,
                'verbose_name': 'event to handle',
            },
        ),
        migrations.CreateModel(
            name='ExternalCashFlow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True, default=poms.common.utils.date_now, verbose_name='date')),
                ('amount', models.FloatField(default=0.0, verbose_name='amount')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='external_cash_flows', to='accounts.Account', verbose_name='account')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='external_cash_flows', to='currencies.Currency', verbose_name='currency')),
                ('master_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='external_cash_flows', to='users.MasterUser', verbose_name='master user')),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='external_cash_flows', to='portfolios.Portfolio', verbose_name='portfolio')),
            ],
            options={
                'verbose_name': 'external cash flow',
                'verbose_name_plural': 'external cash flows',
            },
        ),
        migrations.CreateModel(
            name='ExternalCashFlowStrategy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(default=0, verbose_name='order')),
                ('external_cash_flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='strategies', to='transactions.ExternalCashFlow', verbose_name='external cash flow')),
                ('strategy1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='external_cash_flow_strategies1', to='strategies.Strategy1', verbose_name='strategy1')),
                ('strategy2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='external_cash_flow_strategies2', to='strategies.Strategy2', verbose_name='strategy2')),
                ('strategy3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='external_cash_flow_strategies3', to='strategies.Strategy3', verbose_name='strategy3')),
            ],
            options={
                'verbose_name': 'external cash flow strategy',
                'ordering': ['external_cash_flow', 'order'],
                'verbose_name_plural': 'external cash flow strtegies',
            },
        ),
        migrations.CreateModel(
            name='NotificationClass',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False, verbose_name='ID')),
                ('system_code', models.CharField(max_length=255, unique=True, verbose_name='system code')),
                ('name_en', models.CharField(blank=True, default='', max_length=255, verbose_name='name (en)')),
                ('name_ru', models.CharField(blank=True, default='', max_length=255, verbose_name='name (ru)')),
                ('name_es', models.CharField(blank=True, default='', max_length=255, verbose_name='name (es)')),
                ('name_de', models.CharField(blank=True, default='', max_length=255, verbose_name='name (de)')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='description (en)')),
                ('description_ru', models.TextField(blank=True, default='', verbose_name='description (ru)')),
                ('description_es', models.TextField(blank=True, default='', verbose_name='description (es)')),
                ('description_de', models.TextField(blank=True, default='', verbose_name='description (de)')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'notification class',
                'verbose_name_plural': 'notification classes',
            },
        ),
        migrations.CreateModel(
            name='PeriodicityGroup',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False, verbose_name='ID')),
                ('system_code', models.CharField(max_length=255, unique=True, verbose_name='system code')),
                ('name_en', models.CharField(blank=True, default='', max_length=255, verbose_name='name (en)')),
                ('name_ru', models.CharField(blank=True, default='', max_length=255, verbose_name='name (ru)')),
                ('name_es', models.CharField(blank=True, default='', max_length=255, verbose_name='name (es)')),
                ('name_de', models.CharField(blank=True, default='', max_length=255, verbose_name='name (de)')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='description (en)')),
                ('description_ru', models.TextField(blank=True, default='', verbose_name='description (ru)')),
                ('description_es', models.TextField(blank=True, default='', verbose_name='description (es)')),
                ('description_de', models.TextField(blank=True, default='', verbose_name='description (de)')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'periodicity group',
                'verbose_name_plural': 'periodicity group',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('complex_transaction_order', models.PositiveSmallIntegerField(default=0.0)),
                ('transaction_code', models.IntegerField(default=0, verbose_name='transaction code')),
                ('position_size_with_sign', models.FloatField(blank=True, null=True, verbose_name='position size with sign')),
                ('cash_consideration', models.FloatField(blank=True, null=True, verbose_name='cash consideration')),
                ('principal_with_sign', models.FloatField(blank=True, null=True, verbose_name='principal with sign')),
                ('carry_with_sign', models.FloatField(blank=True, null=True, verbose_name='carry with sign')),
                ('overheads_with_sign', models.FloatField(blank=True, null=True, verbose_name='overheads with sign')),
                ('transaction_date', models.DateField(default=poms.common.utils.date_now, editable=False, verbose_name='transaction date')),
                ('accounting_date', models.DateField(default=poms.common.utils.date_now, verbose_name='accounting date')),
                ('cash_date', models.DateField(default=poms.common.utils.date_now, verbose_name='cash date')),
                ('reference_fx_rate', models.FloatField(blank=True, help_text='FX rate to convert from Settlement ccy to Instrument Ccy on Accounting Date (trade date)', null=True, verbose_name='reference fx-rate')),
                ('is_locked', models.BooleanField(default=False, help_text='If checked - transaction cannot be changed', verbose_name='is locked')),
                ('is_canceled', models.BooleanField(default=False, help_text='If checked - transaction is cancelled', verbose_name='is canceled')),
                ('factor', models.FloatField(blank=True, help_text='Multiplier (for calculations on the form)', null=True, verbose_name='factor')),
                ('trade_price', models.FloatField(blank=True, help_text='Price (for calculations on the form)', null=True, verbose_name='trade price')),
                ('principal_amount', models.FloatField(blank=True, help_text='Absolute value of Principal with Sign (for calculations on the form)', null=True, verbose_name='principal amount')),
                ('carry_amount', models.FloatField(blank=True, help_text='Absolute value of Carry with Sign (for calculations on the form)', null=True, verbose_name='carry amount')),
                ('overheads', models.FloatField(blank=True, help_text='Absolute value of Carry with Sign (for calculations on the form)', null=True, verbose_name='overheads')),
                ('account_cash', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transaction_cashs', to='accounts.Account', verbose_name='account cash')),
                ('account_interim', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='account_interims', to='accounts.Account', verbose_name='account interim')),
                ('account_position', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='account_positions', to='accounts.Account', verbose_name='account position')),
                ('complex_transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transactions', to='transactions.ComplexTransaction')),
                ('counterparty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='counterparties.Counterparty', verbose_name='counterparty')),
                ('instrument', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='instruments.Instrument', verbose_name='instrument')),
                ('master_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='users.MasterUser', verbose_name='master user')),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='portfolios.Portfolio', verbose_name='portfolio')),
                ('responsible', models.ForeignKey(blank=True, help_text='Trader or transaction executer', null=True, on_delete=django.db.models.deletion.PROTECT, to='counterparties.Responsible', verbose_name='responsible')),
                ('settlement_currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transactions', to='currencies.Currency', verbose_name='settlement currency')),
                ('strategy1_cash', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transaction_as_cash1', to='strategies.Strategy1', verbose_name='strategy - 1 - position')),
                ('strategy1_position', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transaction_as_position1', to='strategies.Strategy1', verbose_name='strategy - 1 - cash')),
                ('strategy2_cash', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transaction_as_cash2', to='strategies.Strategy2', verbose_name='strategy - 2 - position')),
                ('strategy2_position', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transaction_as_position2', to='strategies.Strategy2', verbose_name='strategy - 2 - cash')),
                ('strategy3_cash', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transaction_as_cash3', to='strategies.Strategy3', verbose_name='strategy - 3 - position')),
                ('strategy3_position', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transaction_as_position3', to='strategies.Strategy3', verbose_name='strategy - 3 - cash')),
            ],
            options={
                'verbose_name': 'transaction',
                'verbose_name_plural': 'transactions',
            },
        ),
        migrations.CreateModel(
            name='TransactionAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value_string', models.CharField(blank=True, max_length=255, null=True, verbose_name='value (String)')),
                ('value_float', models.FloatField(blank=True, null=True, verbose_name='value (Float)')),
                ('value_date', models.DateField(blank=True, null=True, verbose_name='value (Date)')),
            ],
            options={
                'verbose_name_plural': 'transaction attributes',
                'abstract': False,
                'verbose_name': 'transaction attribute',
            },
        ),
        migrations.CreateModel(
            name='TransactionAttributeType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_code', models.CharField(blank=True, max_length=25, null=True, verbose_name='user code')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('short_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='short name')),
                ('public_name', models.CharField(blank=True, help_text='used if user does not have permissions to view object', max_length=255, null=True, verbose_name='public name')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('value_type', models.PositiveSmallIntegerField(choices=[(20, 'Number'), (10, 'String'), (40, 'Date'), (30, 'Classifier')], default=10, verbose_name='value type')),
                ('order', models.IntegerField(default=0, verbose_name='order')),
                ('master_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.MasterUser', verbose_name='master user')),
            ],
            options={
                'verbose_name_plural': 'transaction attribute types',
                'abstract': False,
                'verbose_name': 'transaction attribute type',
                'permissions': [('view_transactionattributetype', 'Can view transaction attribute type'), ('manage_transactionattributetype', 'Can manage transaction attribute type')],
            },
        ),
        migrations.CreateModel(
            name='TransactionAttributeTypeGroupObjectPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_object_permissions', to='transactions.TransactionAttributeType', verbose_name='content object')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Group', verbose_name='group')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.Permission', verbose_name='permission')),
            ],
            options={
                'verbose_name_plural': 'transaction attribute types - group permissions',
                'abstract': False,
                'verbose_name': 'transaction attribute types - group permission',
            },
        ),
        migrations.CreateModel(
            name='TransactionAttributeTypeOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_hidden', models.BooleanField(default=False, verbose_name='is hidden')),
                ('attribute_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='transactions.TransactionAttributeType', verbose_name='attribute type')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transaction_attribute_type_options', to='users.Member', verbose_name='member')),
            ],
            options={
                'verbose_name_plural': 'transaction attribute types - options',
                'abstract': False,
                'verbose_name': 'transaction attribute types - option',
            },
        ),
        migrations.CreateModel(
            name='TransactionAttributeTypeUserObjectPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_object_permissions', to='transactions.TransactionAttributeType', verbose_name='content object')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Member', verbose_name='member')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.Permission', verbose_name='permission')),
            ],
            options={
                'verbose_name_plural': 'transaction attribute types - user permissions',
                'abstract': False,
                'verbose_name': 'transaction attribute types - user permission',
            },
        ),
        migrations.CreateModel(
            name='TransactionClass',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False, verbose_name='ID')),
                ('system_code', models.CharField(max_length=255, unique=True, verbose_name='system code')),
                ('name_en', models.CharField(blank=True, default='', max_length=255, verbose_name='name (en)')),
                ('name_ru', models.CharField(blank=True, default='', max_length=255, verbose_name='name (ru)')),
                ('name_es', models.CharField(blank=True, default='', max_length=255, verbose_name='name (es)')),
                ('name_de', models.CharField(blank=True, default='', max_length=255, verbose_name='name (de)')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='description (en)')),
                ('description_ru', models.TextField(blank=True, default='', verbose_name='description (ru)')),
                ('description_es', models.TextField(blank=True, default='', verbose_name='description (es)')),
                ('description_de', models.TextField(blank=True, default='', verbose_name='description (de)')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'transaction class',
                'verbose_name_plural': 'transaction classes',
            },
        ),
        migrations.CreateModel(
            name='TransactionClassifier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('attribute_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='classifiers', to='transactions.TransactionAttributeType', verbose_name='attribute type')),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='transactions.TransactionClassifier', verbose_name='parent')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'transaction classifier',
                'verbose_name_plural': 'transaction classifiers',
            },
        ),
        migrations.CreateModel(
            name='TransactionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_code', models.CharField(blank=True, max_length=25, null=True, verbose_name='user code')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('short_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='short name')),
                ('public_name', models.CharField(blank=True, help_text='used if user does not have permissions to view object', max_length=255, null=True, verbose_name='public name')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('display_expr', models.CharField(blank=True, default='', max_length=255)),
            ],
            options={
                'verbose_name_plural': 'transaction types',
                'abstract': False,
                'verbose_name': 'transaction type',
                'permissions': [('view_transactiontype', 'Can view transaction type'), ('manage_transactiontype', 'Can manage transaction type')],
            },
        ),
        migrations.CreateModel(
            name='TransactionTypeAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'action',
                'ordering': ['transaction_type', 'order'],
                'verbose_name_plural': 'actions',
            },
        ),
        migrations.CreateModel(
            name='TransactionTypeGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_code', models.CharField(blank=True, max_length=25, null=True, verbose_name='user code')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('short_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='short name')),
                ('public_name', models.CharField(blank=True, help_text='used if user does not have permissions to view object', max_length=255, null=True, verbose_name='public name')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('master_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transaction_type_groups', to='users.MasterUser', verbose_name='master user')),
            ],
            options={
                'verbose_name_plural': 'transaction type groups',
                'abstract': False,
                'verbose_name': 'transaction type group',
                'permissions': [('view_transactiontypegroup', 'Can view transaction type group'), ('manage_transactiontypegroup', 'Can manage transaction type group')],
            },
        ),
        migrations.CreateModel(
            name='TransactionTypeGroupGroupObjectPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_object_permissions', to='transactions.TransactionTypeGroup', verbose_name='content object')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Group', verbose_name='group')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.Permission', verbose_name='permission')),
            ],
            options={
                'verbose_name_plural': 'transaction type groups - group permissions',
                'abstract': False,
                'verbose_name': 'transaction type groups - group permission',
            },
        ),
        migrations.CreateModel(
            name='TransactionTypeGroupObjectPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_object_permissions', to='transactions.TransactionType', verbose_name='content object')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Group', verbose_name='group')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.Permission', verbose_name='permission')),
            ],
            options={
                'verbose_name_plural': 'transaction types - group permissions',
                'abstract': False,
                'verbose_name': 'transaction types - group permission',
            },
        ),
        migrations.CreateModel(
            name='TransactionTypeGroupUserObjectPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_object_permissions', to='transactions.TransactionTypeGroup', verbose_name='content object')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Member', verbose_name='member')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.Permission', verbose_name='permission')),
            ],
            options={
                'verbose_name_plural': 'transaction type groups - user permissions',
                'abstract': False,
                'verbose_name': 'transaction type groups - user permission',
            },
        ),
        migrations.CreateModel(
            name='TransactionTypeInput',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('verbose_name', models.CharField(blank=True, max_length=255, null=True)),
                ('value_type', models.PositiveSmallIntegerField(choices=[(20, 'Number'), (10, 'String'), (40, 'Date'), (100, 'Relation')], default=20, verbose_name='value type')),
                ('order', models.IntegerField(default=0, verbose_name='order')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType', verbose_name='content type')),
                ('transaction_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inputs', to='transactions.TransactionType')),
            ],
            options={
                'verbose_name_plural': 'transaction type inputs',
                'ordering': ['transaction_type', 'order'],
                'verbose_name': 'transaction type input',
            },
        ),
        migrations.CreateModel(
            name='TransactionTypeUserObjectPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_object_permissions', to='transactions.TransactionType', verbose_name='content object')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Member', verbose_name='member')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.Permission', verbose_name='permission')),
            ],
            options={
                'verbose_name_plural': 'transaction types - user permissions',
                'abstract': False,
                'verbose_name': 'transaction types - user permission',
            },
        ),
        migrations.CreateModel(
            name='TransactionTypeActionInstrument',
            fields=[
                ('transactiontypeaction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='transactions.TransactionTypeAction')),
                ('isin', models.CharField(blank=True, default='', max_length=255)),
                ('user_code', models.CharField(blank=True, default='', max_length=255)),
                ('name', models.CharField(blank=True, default='', max_length=255)),
                ('public_name', models.CharField(blank=True, default='', max_length=255)),
                ('short_name', models.CharField(blank=True, default='', max_length=255)),
                ('notes', models.CharField(blank=True, default='', max_length=255)),
                ('price_multiplier', models.CharField(default='0.', max_length=255)),
                ('accrued_multiplier', models.CharField(default='0.', max_length=255)),
                ('default_price', models.CharField(default='0.', max_length=255)),
                ('default_accrued', models.CharField(default='0.', max_length=255)),
                ('user_text_1', models.CharField(blank=True, default='', max_length=255)),
                ('user_text_2', models.CharField(blank=True, default='', max_length=255)),
                ('user_text_3', models.CharField(blank=True, default='', max_length=255)),
                ('accrued_currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='currencies.Currency')),
            ],
            options={
                'verbose_name': 'action instrument',
                'verbose_name_plural': 'action instruments',
            },
            bases=('transactions.transactiontypeaction',),
        ),
        migrations.CreateModel(
            name='TransactionTypeActionTransaction',
            fields=[
                ('transactiontypeaction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='transactions.TransactionTypeAction')),
                ('position_size_with_sign', models.CharField(default='0.', max_length=255)),
                ('cash_consideration', models.CharField(default='0.', max_length=255)),
                ('principal_with_sign', models.CharField(default='0.', max_length=255)),
                ('carry_with_sign', models.CharField(default='0.', max_length=255)),
                ('overheads_with_sign', models.CharField(default='0.', max_length=255)),
                ('accounting_date', models.CharField(blank=True, default='', max_length=255)),
                ('cash_date', models.CharField(blank=True, default='', max_length=255)),
                ('reference_fx_rate', models.CharField(default='0.', max_length=255)),
                ('factor', models.CharField(default='0.', max_length=255)),
                ('trade_price', models.CharField(default='0.', max_length=255)),
                ('principal_amount', models.CharField(default='0.', max_length=255)),
                ('carry_amount', models.CharField(default='0.', max_length=255)),
                ('overheads', models.CharField(default='0.', max_length=255)),
                ('account_cash', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='accounts.Account')),
            ],
            options={
                'verbose_name': 'action transaction',
                'verbose_name_plural': 'action transactions',
            },
            bases=('transactions.transactiontypeaction',),
        ),
        migrations.AddField(
            model_name='transactiontypeaction',
            name='transaction_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='actions', to='transactions.TransactionType'),
        ),
        migrations.AddField(
            model_name='transactiontype',
            name='group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='transactions.TransactionTypeGroup'),
        ),
        migrations.AddField(
            model_name='transactiontype',
            name='instrument_types',
            field=models.ManyToManyField(blank=True, related_name='transaction_types', to='instruments.InstrumentType', verbose_name='instrument types'),
        ),
        migrations.AddField(
            model_name='transactiontype',
            name='master_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transaction_types', to='users.MasterUser', verbose_name='master user'),
        ),
        migrations.AddField(
            model_name='transactionattribute',
            name='attribute_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='attributes', to='transactions.TransactionAttributeType', verbose_name='attribute type'),
        ),
        migrations.AddField(
            model_name='transactionattribute',
            name='classifier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='transactions.TransactionClassifier', verbose_name='classifier'),
        ),
        migrations.AddField(
            model_name='transactionattribute',
            name='content_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attributes', to='transactions.Transaction', verbose_name='content object'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='transaction_class',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='transactions.TransactionClass', verbose_name='transaction class'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='transaction_currency',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transactions_as_instrument', to='currencies.Currency', verbose_name='transaction currency'),
        ),
        migrations.AddField(
            model_name='eventtohandle',
            name='transaction_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='transactions.TransactionType', verbose_name='transaction type'),
        ),
        migrations.AddField(
            model_name='complextransaction',
            name='transaction_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='transactions.TransactionType'),
        ),
        migrations.AlterUniqueTogether(
            name='transactiontypeuserobjectpermission',
            unique_together=set([('content_object', 'member', 'permission')]),
        ),
        migrations.AlterUniqueTogether(
            name='transactiontypeinput',
            unique_together=set([('transaction_type', 'name')]),
        ),
        migrations.AlterIndexTogether(
            name='transactiontypeinput',
            index_together=set([('transaction_type', 'order')]),
        ),
        migrations.AlterUniqueTogether(
            name='transactiontypegroupuserobjectpermission',
            unique_together=set([('content_object', 'member', 'permission')]),
        ),
        migrations.AlterUniqueTogether(
            name='transactiontypegroupobjectpermission',
            unique_together=set([('content_object', 'group', 'permission')]),
        ),
        migrations.AlterUniqueTogether(
            name='transactiontypegroupgroupobjectpermission',
            unique_together=set([('content_object', 'group', 'permission')]),
        ),
        migrations.AlterUniqueTogether(
            name='transactiontypegroup',
            unique_together=set([('master_user', 'user_code')]),
        ),
        migrations.AddField(
            model_name='transactiontypeactiontransaction',
            name='account_cash_input',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='transactions.TransactionTypeInput'),
        ),
        migrations.AddField(
            model_name='transactiontypeactiontransaction',
            name='account_interim',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='accounts.Account'),
        ),
        migrations.AddField(
            model_name='transactiontypeactiontransaction',
            name='account_interim_input',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='transactions.TransactionTypeInput'),
        ),
        migrations.AddField(
            model_name='transactiontypeactiontransaction',
            name='account_position',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='accounts.Account'),
        ),
        migrations.AddField(
            model_name='transactiontypeactiontransaction',
            name='account_position_input',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='transactions.TransactionTypeInput'),
        ),
        migrations.AddField(
            model_name='transactiontypeactiontransaction',
            name='counterparty',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='counterparties.Counterparty'),
        ),
        migrations.AddField(
            model_name='transactiontypeactiontransaction',
            name='counterparty_input',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='transactions.TransactionTypeInput'),
        ),
        migrations.AddField(
            model_name='transactiontypeactiontransaction',
            name='instrument',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='instruments.Instrument'),
        ),
        migrations.AddField(
            model_name='transactiontypeactiontransaction',
            name='instrument_input',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='transactions.TransactionTypeInput'),
        ),
        migrations.AddField(
            model_name='transactiontypeactiontransaction',
            name='instrument_phantom',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='transactions.TransactionTypeActionInstrument'),
        ),
        migrations.AddField(
            model_name='transactiontypeactiontransaction',
            name='portfolio',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='portfolios.Portfolio'),
        ),
        migrations.AddField(
            model_name='transactiontypeactiontransaction',
            name='portfolio_input',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='transactions.TransactionTypeInput'),
        ),
        migrations.AddField(
            model_name='transactiontypeactiontransaction',
            name='responsible',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='counterparties.Responsible'),
        ),
        migrations.AddField(
            model_name='transactiontypeactiontransaction',
            name='responsible_input',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='transactions.TransactionTypeInput'),
        ),
        migrations.AddField(
            model_name='transactiontypeactiontransaction',
            name='settlement_currency',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='currencies.Currency'),
        ),
        migrations.AddField(
            model_name='transactiontypeactiontransaction',
            name='settlement_currency_input',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='transactions.TransactionTypeInput'),
        ),
        migrations.AddField(
            model_name='transactiontypeactiontransaction',
            name='strategy1_cash',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='strategies.Strategy1'),
        ),
        migrations.AddField(
            model_name='transactiontypeactiontransaction',
            name='strategy1_cash_input',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='transactions.TransactionTypeInput'),
        ),
        migrations.AddField(
            model_name='transactiontypeactiontransaction',
            name='strategy1_position',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='strategies.Strategy1'),
        ),
        migrations.AddField(
            model_name='transactiontypeactiontransaction',
            name='strategy1_position_input',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='transactions.TransactionTypeInput'),
        ),
        migrations.AddField(
            model_name='transactiontypeactiontransaction',
            name='strategy2_cash',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='strategies.Strategy2'),
        ),
        migrations.AddField(
            model_name='transactiontypeactiontransaction',
            name='strategy2_cash_input',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='transactions.TransactionTypeInput'),
        ),
        migrations.AddField(
            model_name='transactiontypeactiontransaction',
            name='strategy2_position',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='strategies.Strategy2'),
        ),
        migrations.AddField(
            model_name='transactiontypeactiontransaction',
            name='strategy2_position_input',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='transactions.TransactionTypeInput'),
        ),
        migrations.AddField(
            model_name='transactiontypeactiontransaction',
            name='strategy3_cash',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='strategies.Strategy3'),
        ),
        migrations.AddField(
            model_name='transactiontypeactiontransaction',
            name='strategy3_cash_input',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='transactions.TransactionTypeInput'),
        ),
        migrations.AddField(
            model_name='transactiontypeactiontransaction',
            name='strategy3_position',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='strategies.Strategy3'),
        ),
        migrations.AddField(
            model_name='transactiontypeactiontransaction',
            name='strategy3_position_input',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='transactions.TransactionTypeInput'),
        ),
        migrations.AddField(
            model_name='transactiontypeactiontransaction',
            name='transaction_class',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='transactions.TransactionClass'),
        ),
        migrations.AddField(
            model_name='transactiontypeactiontransaction',
            name='transaction_currency',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='currencies.Currency'),
        ),
        migrations.AddField(
            model_name='transactiontypeactiontransaction',
            name='transaction_currency_input',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='transactions.TransactionTypeInput'),
        ),
        migrations.AddField(
            model_name='transactiontypeactioninstrument',
            name='accrued_currency_input',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='transactions.TransactionTypeInput'),
        ),
        migrations.AddField(
            model_name='transactiontypeactioninstrument',
            name='daily_pricing_model',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='instruments.DailyPricingModel'),
        ),
        migrations.AddField(
            model_name='transactiontypeactioninstrument',
            name='daily_pricing_model_input',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='transactions.TransactionTypeInput'),
        ),
        migrations.AddField(
            model_name='transactiontypeactioninstrument',
            name='instrument_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='instruments.InstrumentType'),
        ),
        migrations.AddField(
            model_name='transactiontypeactioninstrument',
            name='instrument_type_input',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='transactions.TransactionTypeInput'),
        ),
        migrations.AddField(
            model_name='transactiontypeactioninstrument',
            name='payment_size_detail',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='instruments.PaymentSizeDetail'),
        ),
        migrations.AddField(
            model_name='transactiontypeactioninstrument',
            name='payment_size_detail_input',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='transactions.TransactionTypeInput'),
        ),
        migrations.AddField(
            model_name='transactiontypeactioninstrument',
            name='pricing_currency',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='currencies.Currency'),
        ),
        migrations.AddField(
            model_name='transactiontypeactioninstrument',
            name='pricing_currency_input',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='transactions.TransactionTypeInput'),
        ),
        migrations.AlterIndexTogether(
            name='transactiontypeaction',
            index_together=set([('transaction_type', 'order')]),
        ),
        migrations.AlterUniqueTogether(
            name='transactiontype',
            unique_together=set([('master_user', 'user_code')]),
        ),
        migrations.AlterUniqueTogether(
            name='transactionattributetypeuserobjectpermission',
            unique_together=set([('content_object', 'member', 'permission')]),
        ),
        migrations.AlterUniqueTogether(
            name='transactionattributetypeoption',
            unique_together=set([('member', 'attribute_type')]),
        ),
        migrations.AlterUniqueTogether(
            name='transactionattributetypegroupobjectpermission',
            unique_together=set([('content_object', 'group', 'permission')]),
        ),
        migrations.AlterUniqueTogether(
            name='transactionattributetype',
            unique_together=set([('master_user', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='transactionattribute',
            unique_together=set([('content_object', 'attribute_type')]),
        ),
        migrations.AlterIndexTogether(
            name='transaction',
            index_together=set([('master_user', 'transaction_code')]),
        ),
        migrations.AlterUniqueTogether(
            name='eventtohandle',
            unique_together=set([('master_user', 'user_code')]),
        ),
        migrations.AlterIndexTogether(
            name='complextransaction',
            index_together=set([('transaction_type', 'code')]),
        ),
    ]

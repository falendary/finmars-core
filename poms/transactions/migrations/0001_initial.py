# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-04-25 09:12
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
        ('accounts', '0002_auto_20160425_0912'),
        ('instruments', '0001_initial'),
        ('portfolios', '0001_initial'),
        ('currencies', '0003_auto_20160425_0912'),
        ('strategies', '0001_initial'),
        ('auth', '0007_alter_validators_add_error_messages'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('counterparties', '0002_auto_20160425_0912'),
    ]

    operations = [
        migrations.CreateModel(
            name='ActionClass',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False, verbose_name='ID')),
                ('system_code', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='system code')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
            ],
            options={
                'verbose_name': 'action class',
                'verbose_name_plural': 'action classes',
            },
        ),
        migrations.CreateModel(
            name='EventClass',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False, verbose_name='ID')),
                ('system_code', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='system code')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
            ],
            options={
                'verbose_name': 'event class',
                'verbose_name_plural': 'event classes',
            },
        ),
        migrations.CreateModel(
            name='EventToHandle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_code', models.CharField(blank=True, max_length=25, null=True, verbose_name='user code')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('short_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='short name')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('notification_date', models.DateField(blank=True, null=True, verbose_name='notification date')),
                ('effective_date', models.DateField(blank=True, null=True, verbose_name='effective date')),
                ('master_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events_to_handle', to='users.MasterUser', verbose_name='master user')),
            ],
            options={
                'verbose_name': 'transaction type item',
                'verbose_name_plural': 'transaction type tems',
            },
        ),
        migrations.CreateModel(
            name='ExternalCashFlow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True, default=django.utils.timezone.now, verbose_name='date')),
                ('amount', models.FloatField(default=0.0, verbose_name='amount')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='external_cash_flows', to='accounts.Account', verbose_name='account')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='external_cash_flows', to='currencies.Currency', verbose_name='currency')),
                ('master_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='external_cash_flows', to='users.MasterUser', verbose_name='master user')),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='external_cash_flows', to='portfolios.Portfolio', verbose_name='portfolio')),
            ],
            options={
                'verbose_name': 'external cash flow',
                'verbose_name_plural': 'external cash flows',
            },
        ),
        migrations.CreateModel(
            name='ExternalCashFlowStrategy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(default=0, verbose_name='order')),
                ('external_cash_flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='strategies', to='transactions.ExternalCashFlow', verbose_name='external cash flow')),
                ('strategy', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='external_cash_flow_strategies', to='strategies.Strategy', verbose_name='strategy')),
            ],
            options={
                'verbose_name': 'external cash flow strategy',
                'verbose_name_plural': 'external cash flow strtegies',
                'ordering': ['external_cash_flow', 'order'],
            },
        ),
        migrations.CreateModel(
            name='NotificationClass',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False, verbose_name='ID')),
                ('system_code', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='system code')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
            ],
            options={
                'verbose_name': 'notification class',
                'verbose_name_plural': 'notification classes',
            },
        ),
        migrations.CreateModel(
            name='PeriodicityGroup',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False, verbose_name='ID')),
                ('system_code', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='system code')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
            ],
            options={
                'verbose_name': 'periodicity group',
                'verbose_name_plural': 'periodicity group',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_code', models.IntegerField(default=0, verbose_name='transaction code')),
                ('position_size_with_sign', models.FloatField(blank=True, null=True, verbose_name='position size with sign')),
                ('cash_consideration', models.FloatField(blank=True, null=True, verbose_name='cash consideration')),
                ('principal_with_sign', models.FloatField(blank=True, null=True, verbose_name='principal with sign')),
                ('carry_with_sign', models.FloatField(blank=True, null=True, verbose_name='carry with sign')),
                ('overheads_with_sign', models.FloatField(blank=True, null=True, verbose_name='overheads with sign')),
                ('transaction_date', models.DateField(default=django.utils.timezone.now, editable=False, verbose_name='transaction date')),
                ('accounting_date', models.DateField(default=django.utils.timezone.now, verbose_name='accounting date')),
                ('cash_date', models.DateField(default=django.utils.timezone.now, verbose_name='cash date')),
                ('reference_fx_rate', models.FloatField(blank=True, help_text='FX rate to convert from Settlement ccy to Instrument Ccy on Accounting Date (trade date)', null=True, verbose_name='reference fx-rate')),
                ('is_locked', models.BooleanField(default=False, help_text='If checked - transaction cannot be changed', verbose_name='is locked')),
                ('is_canceled', models.BooleanField(default=False, help_text='If checked - transaction is cancelled', verbose_name='is canceled')),
                ('factor', models.FloatField(blank=True, help_text='Multiplier (for calculations on the form)', null=True, verbose_name='factor')),
                ('trade_price', models.FloatField(blank=True, help_text='Price (for calculations on the form)', null=True, verbose_name='trade price')),
                ('principal_amount', models.FloatField(blank=True, help_text='Absolute value of Principal with Sign (for calculations on the form)', null=True, verbose_name='principal amount')),
                ('carry_amount', models.FloatField(blank=True, help_text='Absolute value of Carry with Sign (for calculations on the form)', null=True, verbose_name='carry amount')),
                ('overheads', models.FloatField(blank=True, help_text='Absolute value of Carry with Sign (for calculations on the form)', null=True, verbose_name='overheads')),
                ('account_cash', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transaction_cashs', to='accounts.Account', verbose_name='account cash')),
                ('account_interim', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='account_interims', to='accounts.Account', verbose_name='account interim')),
                ('account_position', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='account_positions', to='accounts.Account', verbose_name='account position')),
                ('counterparty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='counterparties.Counterparty', verbose_name='counterparty')),
                ('instrument', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='instruments.Instrument', verbose_name='instrument')),
                ('master_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='users.MasterUser', verbose_name='master user')),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='portfolios.Portfolio', verbose_name='portfolio')),
                ('responsible', models.ForeignKey(blank=True, help_text='Trader or transaction executer', null=True, on_delete=django.db.models.deletion.PROTECT, to='counterparties.Responsible', verbose_name='responsible')),
                ('settlement_currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transactions', to='currencies.Currency', verbose_name='settlement currency')),
            ],
            options={
                'verbose_name': 'transaction',
                'verbose_name_plural': 'transactions',
                'permissions': [('view_transaction', 'Can view transaction')],
            },
        ),
        migrations.CreateModel(
            name='TransactionAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value_string', models.CharField(blank=True, max_length=255, null=True, verbose_name='value (String)')),
                ('value_float', models.FloatField(blank=True, null=True, verbose_name='value (Float)')),
                ('value_date', models.DateField(blank=True, null=True, verbose_name='value (Date)')),
            ],
            options={
                'verbose_name': 'transaction attribute',
                'verbose_name_plural': 'transaction attributes',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TransactionAttributeType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_code', models.CharField(blank=True, max_length=25, null=True, verbose_name='user code')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('short_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='short name')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('value_type', models.PositiveSmallIntegerField(choices=[(20, 'Number'), (10, 'String'), (40, 'Date'), (30, 'Classifier')], default=10, verbose_name='value type')),
                ('order', models.IntegerField(default=0, verbose_name='order')),
                ('master_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.MasterUser', verbose_name='master user')),
                ('strategy_cash_root', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='cash_transaction_attribute_types', to='strategies.Strategy', verbose_name='strategy cash (root)')),
                ('strategy_position_root', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='strategy_transaction_attribute_types', to='strategies.Strategy', verbose_name='strategy position (root)')),
            ],
            options={
                'verbose_name': 'transaction attribute type',
                'verbose_name_plural': 'transaction attribute types',
            },
        ),
        migrations.CreateModel(
            name='TransactionAttributeTypeGroupObjectPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_object_permissions', to='transactions.TransactionAttributeType', verbose_name='content object')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Group', verbose_name='group')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.Permission', verbose_name='permission')),
            ],
            options={
                'verbose_name': 'transaction attribute types - group permission',
                'verbose_name_plural': 'transaction attribute types - group permissions',
            },
        ),
        migrations.CreateModel(
            name='TransactionAttributeTypeOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_hidden', models.BooleanField(default=False, verbose_name='is hidden')),
                ('attribute_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='transactions.TransactionAttributeType', verbose_name='attribute type')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transaction_attribute_type_options', to='users.Member', verbose_name='member')),
            ],
            options={
                'verbose_name': 'transaction attribute types - option',
                'verbose_name_plural': 'transaction attribute types - options',
            },
        ),
        migrations.CreateModel(
            name='TransactionAttributeTypeUserObjectPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_object_permissions', to='transactions.TransactionAttributeType', verbose_name='content object')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Member', verbose_name='member')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.Permission', verbose_name='permission')),
            ],
            options={
                'verbose_name': 'transaction attribute types - user permission',
                'verbose_name_plural': 'transaction attribute types - user permissions',
            },
        ),
        migrations.CreateModel(
            name='TransactionClass',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False, verbose_name='ID')),
                ('system_code', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='system code')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
            ],
            options={
                'verbose_name': 'transaction class',
                'verbose_name_plural': 'transaction classes',
            },
        ),
        migrations.CreateModel(
            name='TransactionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_code', models.CharField(blank=True, max_length=25, null=True, verbose_name='user code')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('short_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='short name')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('instrument_types', models.ManyToManyField(blank=True, related_name='transaction_types', to='instruments.InstrumentType', verbose_name='instrument types')),
                ('master_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transaction_types', to='users.MasterUser', verbose_name='master user')),
            ],
            options={
                'verbose_name': 'transaction type',
                'verbose_name_plural': 'transaction types',
                'permissions': [('view_transactiontype', 'Can view transaction type')],
            },
        ),
        migrations.CreateModel(
            name='TransactionTypeGroupObjectPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_object_permissions', to='transactions.TransactionType', verbose_name='content object')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Group', verbose_name='group')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.Permission', verbose_name='permission')),
            ],
            options={
                'verbose_name': 'transaction types - group permission',
                'verbose_name_plural': 'transaction types - group permissions',
            },
        ),
        migrations.CreateModel(
            name='TransactionTypeInput',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value_type', models.PositiveSmallIntegerField(choices=[(20, 'Number'), (10, 'String'), (40, 'Date'), (30, 'Expression'), (100, 'Relation')], default=20, verbose_name='value type')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='name')),
                ('order', models.IntegerField(default=0, verbose_name='order')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType', verbose_name='content type')),
                ('transaction_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inputs', to='transactions.TransactionType', verbose_name='transaction type')),
            ],
            options={
                'verbose_name': 'transaction type input',
                'verbose_name_plural': 'transaction type inputs',
            },
        ),
        migrations.CreateModel(
            name='TransactionTypeItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(default=0)),
                ('position_size_with_sign', models.FloatField(blank=True, null=True)),
                ('cash_consideration', models.FloatField(blank=True, null=True)),
                ('accounting_date', models.DateField(blank=True, null=True)),
                ('cash_date', models.DateField(blank=True, null=True)),
                ('position_size_with_sign_expr', models.CharField(blank=True, default='', max_length=255)),
                ('cash_consideration_expr', models.CharField(blank=True, default='', max_length=255)),
                ('accounting_date_expr', models.CharField(blank=True, default='', max_length=255)),
                ('cash_date_expr', models.CharField(blank=True, default='', max_length=255)),
                ('account_cash', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='accounts.Account')),
                ('account_cash_input', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='transactions.TransactionTypeInput')),
                ('account_interim', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='accounts.Account')),
                ('account_interim_input', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='transactions.TransactionTypeInput')),
                ('account_position', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='accounts.Account')),
                ('account_position_input', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='transactions.TransactionTypeInput')),
                ('instrument', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='instruments.Instrument')),
                ('instrument_input', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='transactions.TransactionTypeInput')),
                ('settlement_currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='currencies.Currency')),
                ('settlement_currency_input', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='transactions.TransactionTypeInput')),
                ('transaction_class', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='transactions.TransactionClass')),
                ('transaction_currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='currencies.Currency')),
                ('transaction_currency_input', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='transactions.TransactionTypeInput')),
                ('transaction_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='items', to='transactions.TransactionType')),
            ],
            options={
                'verbose_name': 'transaction type item',
                'verbose_name_plural': 'transaction type tems',
            },
        ),
        migrations.CreateModel(
            name='TransactionTypeUserObjectPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_object_permissions', to='transactions.TransactionType', verbose_name='content object')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Member', verbose_name='member')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.Permission', verbose_name='permission')),
            ],
            options={
                'verbose_name': 'transaction types - user permission',
                'verbose_name_plural': 'transaction types - user permissions',
            },
        ),
        migrations.AddField(
            model_name='transactionattribute',
            name='attribute_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='attributes', to='transactions.TransactionAttributeType', verbose_name='attribute type'),
        ),
        migrations.AddField(
            model_name='transactionattribute',
            name='content_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attributes', to='transactions.Transaction', verbose_name='content object'),
        ),
        migrations.AddField(
            model_name='transactionattribute',
            name='strategy_cash',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='cash_transaction_attributes', to='strategies.Strategy', verbose_name='strategy cash'),
        ),
        migrations.AddField(
            model_name='transactionattribute',
            name='strategy_position',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='strategy_transaction_attributes', to='strategies.Strategy', verbose_name='strategy position'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='transaction_class',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='transactions.TransactionClass', verbose_name='transaction class'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='transaction_currency',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transactions_as_instrument', to='currencies.Currency', verbose_name='transaction currency'),
        ),
        migrations.AddField(
            model_name='eventtohandle',
            name='transaction_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='transactions.TransactionType', verbose_name='transaction type'),
        ),
        migrations.AlterUniqueTogether(
            name='transactiontype',
            unique_together=set([('master_user', 'user_code')]),
        ),
        migrations.AlterUniqueTogether(
            name='transactionattribute',
            unique_together=set([('content_object', 'attribute_type')]),
        ),
    ]

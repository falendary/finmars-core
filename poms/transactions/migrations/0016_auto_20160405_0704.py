# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-04-05 07:04
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    dependencies = [
        ('strategies', '0007_auto_20160404_1051'),
        ('users', '0013_auto_20160405_0704'),
        ('transactions', '0015_auto_20160404_1333'),
    ]

    operations = [
        migrations.CreateModel(
            name='ComplexTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_code', models.CharField(blank=True, max_length=25, null=True, verbose_name='user code')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('short_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='short name')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('master_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='complex_transactions', to='users.MasterUser', verbose_name='master user')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transactions.TransactionType')),
            ],
            options={
                'verbose_name_plural': 'complex transactions',
                'verbose_name': 'complex transaction',
            },
        ),
        migrations.CreateModel(
            name='TransactionAttr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_code', models.CharField(blank=True, max_length=25, null=True, verbose_name='user code')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('short_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='short name')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('order', models.IntegerField(default=0)),
                ('value_type', models.PositiveSmallIntegerField(choices=[(20, 'Number'), (10, 'String'), (30, 'Classifier')], default=10)),
                ('scheme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.AttrScheme', verbose_name='attribute scheme')),
                ('strategy_cash_root', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='strategies.Strategy')),
                ('strategy_position_root', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='strategies.Strategy')),
            ],
        ),
        migrations.CreateModel(
            name='TransactionAttrValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value_str', models.CharField(blank=True, max_length=255, null=True)),
                ('value_num', models.FloatField(blank=True, null=True)),
                ('attr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transactions.TransactionAttr')),
                ('strategy_cash', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='strategies.Strategy')),
                ('strategy_position', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='strategies.Strategy')),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transactions.Transaction')),
            ],
        ),
        migrations.AddField(
            model_name='transaction',
            name='complex_transactions',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='transactions.ComplexTransaction'),
        ),
        migrations.AlterUniqueTogether(
            name='complextransaction',
            unique_together=set([('master_user', 'user_code')]),
        ),
    ]

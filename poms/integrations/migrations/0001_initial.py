# -*- coding: utf-8 -*-
# Generated by Django 1.9.9 on 2016-08-24 05:30
from __future__ import unicode_literals

import django.core.files.storage
from django.db import migrations, models
import poms.integrations.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AccrualCalculationModelMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'accrual calculation model mapping',
                'verbose_name_plural': 'accrual calculation model  mappings',
            },
        ),
        migrations.CreateModel(
            name='AccrualScheduleDownloadMethod',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False, verbose_name='ID')),
                ('system_code', models.CharField(max_length=255, unique=True, verbose_name='system code')),
                ('name_en', models.CharField(blank=True, default='', max_length=255, verbose_name='name (en)')),
                ('name_ru', models.CharField(blank=True, default='', max_length=255, verbose_name='name (ru)')),
                ('name_es', models.CharField(blank=True, default='', max_length=255, verbose_name='name (es)')),
                ('name_de', models.CharField(blank=True, default='', max_length=255, verbose_name='name (de)')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='description (en)')),
                ('description_ru', models.TextField(blank=True, default='', verbose_name='description (ru)')),
                ('description_es', models.TextField(blank=True, default='', verbose_name='description (es)')),
                ('description_de', models.TextField(blank=True, default='', verbose_name='description (de)')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CurrencyMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'currency mapping',
                'verbose_name_plural': 'currency mappings',
            },
        ),
        migrations.CreateModel(
            name='FactorScheduleDownloadMethod',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False, verbose_name='ID')),
                ('system_code', models.CharField(max_length=255, unique=True, verbose_name='system code')),
                ('name_en', models.CharField(blank=True, default='', max_length=255, verbose_name='name (en)')),
                ('name_ru', models.CharField(blank=True, default='', max_length=255, verbose_name='name (ru)')),
                ('name_es', models.CharField(blank=True, default='', max_length=255, verbose_name='name (es)')),
                ('name_de', models.CharField(blank=True, default='', max_length=255, verbose_name='name (de)')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='description (en)')),
                ('description_ru', models.TextField(blank=True, default='', verbose_name='description (ru)')),
                ('description_es', models.TextField(blank=True, default='', verbose_name='description (es)')),
                ('description_de', models.TextField(blank=True, default='', verbose_name='description (de)')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ImportConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('p12cert', models.FileField(blank=True, null=True, storage=django.core.files.storage.FileSystemStorage(base_url='/api/bloomberg/', location='/Users/ailyukhin/develop/workspaces/mars/backend/tmp/import-config'), upload_to=poms.integrations.models.import_cert_upload_to)),
                ('password', models.CharField(blank=True, max_length=64, null=True)),
                ('cert', models.FileField(blank=True, null=True, storage=django.core.files.storage.FileSystemStorage(base_url='/api/bloomberg/', location='/Users/ailyukhin/develop/workspaces/mars/backend/tmp/import-config'), upload_to=poms.integrations.models.import_cert_upload_to)),
                ('key', models.FileField(blank=True, null=True, storage=django.core.files.storage.FileSystemStorage(base_url='/api/bloomberg/', location='/Users/ailyukhin/develop/workspaces/mars/backend/tmp/import-config'), upload_to=poms.integrations.models.import_cert_upload_to)),
            ],
            options={
                'verbose_name_plural': 'import configs',
                'verbose_name': 'import config',
            },
        ),
        migrations.CreateModel(
            name='InstrumentAttributeValueMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=255)),
                ('value_string', models.CharField(blank=True, max_length=255, null=True, verbose_name='value (String)')),
                ('value_float', models.FloatField(blank=True, null=True, verbose_name='value (Float)')),
                ('value_date', models.DateField(blank=True, null=True, verbose_name='value (Date)')),
            ],
            options={
                'verbose_name': 'instrument attribute value mapping',
                'verbose_name_plural': 'instrument attribute value mappings',
            },
        ),
        migrations.CreateModel(
            name='InstrumentDownloadScheme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheme_name', models.CharField(max_length=255)),
                ('reference_for_pricing', models.CharField(blank=True, default='', max_length=255)),
                ('user_code', models.CharField(blank=True, default='', max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('short_name', models.CharField(blank=True, default='', max_length=255)),
                ('public_name', models.CharField(blank=True, default='', max_length=255)),
                ('notes', models.CharField(blank=True, default='', max_length=255)),
                ('instrument_type', models.CharField(blank=True, default='', max_length=255)),
                ('pricing_currency', models.CharField(blank=True, default='', max_length=255)),
                ('price_multiplier', models.CharField(blank=True, default='1.0', max_length=255)),
                ('accrued_currency', models.CharField(blank=True, default='', max_length=255)),
                ('accrued_multiplier', models.CharField(blank=True, default='1.0', max_length=255)),
                ('user_text_1', models.CharField(blank=True, default='', max_length=255)),
                ('user_text_2', models.CharField(blank=True, default='', max_length=255)),
                ('user_text_3', models.CharField(blank=True, default='', max_length=255)),
            ],
            options={
                'verbose_name': 'instrument download scheme',
                'verbose_name_plural': 'instrument download schemes',
            },
        ),
        migrations.CreateModel(
            name='InstrumentDownloadSchemeAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, default='', max_length=255)),
            ],
            options={
                'verbose_name_plural': 'instrument download schemes attribute',
                'ordering': ('attribute_type__name',),
                'verbose_name': 'instrument download scheme attribute',
            },
        ),
        migrations.CreateModel(
            name='InstrumentDownloadSchemeInput',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=32)),
                ('field', models.CharField(blank=True, default='', max_length=32)),
            ],
            options={
                'verbose_name_plural': 'instrument download scheme inputs',
                'ordering': ('name',),
                'verbose_name': 'instrument download scheme input',
            },
        ),
        migrations.CreateModel(
            name='InstrumentTypeMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'instrument type mapping',
                'verbose_name_plural': 'instrument type mappings',
            },
        ),
        migrations.CreateModel(
            name='PeriodicityMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'periodicity mapping',
                'verbose_name_plural': 'periodicity  mappings',
            },
        ),
        migrations.CreateModel(
            name='PriceDownloadScheme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheme_name', models.CharField(max_length=255)),
                ('bid0', models.CharField(blank=True, max_length=50)),
                ('bid1', models.CharField(blank=True, max_length=50)),
                ('bid2', models.CharField(blank=True, max_length=50)),
                ('bid_multiplier', models.FloatField(default=1.0)),
                ('ask0', models.CharField(blank=True, max_length=50)),
                ('ask1', models.CharField(blank=True, max_length=50)),
                ('ask2', models.CharField(blank=True, max_length=50)),
                ('ask_multiplier', models.FloatField(default=1.0)),
                ('last', models.CharField(blank=True, max_length=50)),
                ('last_multiplier', models.FloatField(default=1.0)),
                ('mid', models.CharField(blank=True, max_length=50)),
                ('mid_multiplier', models.FloatField(default=1.0)),
                ('bid_history', models.CharField(blank=True, max_length=50)),
                ('bid_history_multiplier', models.FloatField(default=1.0)),
                ('ask_history', models.CharField(blank=True, max_length=50)),
                ('ask_history_multiplier', models.FloatField(default=1.0)),
                ('mid_history', models.CharField(blank=True, max_length=50)),
                ('mid_history_multiplier', models.FloatField(default=1.0)),
                ('last_history', models.CharField(blank=True, max_length=50)),
                ('last_history_multiplier', models.FloatField(default=1.0)),
                ('currency_fxrate', models.CharField(blank=True, max_length=50)),
                ('currency_fxrate_multiplier', models.FloatField(default=1.0)),
            ],
            options={
                'verbose_name_plural': 'price download schemes',
                'verbose_name': 'price download scheme',
            },
        ),
        migrations.CreateModel(
            name='ProviderClass',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False, verbose_name='ID')),
                ('system_code', models.CharField(max_length=255, unique=True, verbose_name='system code')),
                ('name_en', models.CharField(blank=True, default='', max_length=255, verbose_name='name (en)')),
                ('name_ru', models.CharField(blank=True, default='', max_length=255, verbose_name='name (ru)')),
                ('name_es', models.CharField(blank=True, default='', max_length=255, verbose_name='name (es)')),
                ('name_de', models.CharField(blank=True, default='', max_length=255, verbose_name='name (de)')),
                ('description_en', models.TextField(blank=True, default='', verbose_name='description (en)')),
                ('description_ru', models.TextField(blank=True, default='', verbose_name='description (ru)')),
                ('description_es', models.TextField(blank=True, default='', verbose_name='description (es)')),
                ('description_de', models.TextField(blank=True, default='', verbose_name='description (de)')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, db_index=True, verbose_name='modified')),
                ('status', models.CharField(choices=[('P', 'PENDING'), ('S', 'REQUEST_SENT'), ('W', 'WAIT_RESPONSE'), ('D', 'DONE'), ('E', 'ERROR'), ('T', 'TIMEOUT')], default='P', max_length=1)),
                ('action', models.CharField(db_index=True, max_length=20)),
                ('options', models.TextField(blank=True, null=True)),
                ('result', models.TextField(blank=True, null=True)),
                ('request_id', models.CharField(db_index=True, max_length=50, null=True)),
                ('response_id', models.CharField(db_index=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'task',
                'ordering': ('-created',),
                'verbose_name_plural': 'tasks',
            },
        ),
    ]

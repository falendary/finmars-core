# -*- coding: utf-8 -*-
# Generated by Django 1.9.9 on 2016-08-04 12:12
from __future__ import unicode_literals

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ('users', '0010_auto_20160801_1352'),
        ('auth', '0007_alter_validators_add_error_messages'),
        ('strategies', '0009_auto_20160704_0938'),
    ]

    operations = [
        migrations.CreateModel(
            name='Strategy1Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_code', models.CharField(blank=True, max_length=25, null=True, verbose_name='user code')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('short_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='short name')),
                ('public_name',
                 models.CharField(blank=True, help_text='used if user does not have permissions to view object',
                                  max_length=255, null=True, verbose_name='public name')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('master_user',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='strategy1_groups',
                                   to='users.MasterUser', verbose_name='master user')),
            ],
            options={
                'verbose_name': 'strategy1 group',
                'verbose_name_plural': 'strategy1 groups',
                'abstract': False,
                'permissions': [('view_strategy1group', 'Can view strategy1 group'),
                                ('manage_strategy1group', 'Can manage strategy1 group')],
            },
        ),
        migrations.CreateModel(
            name='Strategy1GroupGroupObjectPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_object_permissions',
                                   to='strategies.Strategy1Group', verbose_name='content object')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Group',
                                            verbose_name='group')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.Permission',
                                                 verbose_name='permission')),
            ],
            options={
                'verbose_name': 'strategy1 groups - group permission',
                'verbose_name_plural': 'strategy1 groups - group permissions',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Strategy1GroupUserObjectPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_object_permissions',
                                   to='strategies.Strategy1Group', verbose_name='content object')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Member',
                                             verbose_name='member')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.Permission',
                                                 verbose_name='permission')),
            ],
            options={
                'verbose_name': 'strategy1 groups - user permission',
                'verbose_name_plural': 'strategy1 groups - user permissions',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Strategy1Subgroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_code', models.CharField(blank=True, max_length=25, null=True, verbose_name='user code')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('short_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='short name')),
                ('public_name',
                 models.CharField(blank=True, help_text='used if user does not have permissions to view object',
                                  max_length=255, null=True, verbose_name='public name')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT,
                                            related_name='subgroups', to='strategies.Strategy1Group')),
            ],
            options={
                'verbose_name': 'strategy1 subgroup',
                'verbose_name_plural': 'strategy1 subgroups',
                'abstract': False,
                'permissions': [('view_strategy1subgroup', 'Can view strategy1 subgroup'),
                                ('manage_strategy1subgroup', 'Can manage strategy1 subgroup')],
            },
        ),
        migrations.CreateModel(
            name='Strategy1SubgroupGroupObjectPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_object_permissions',
                                   to='strategies.Strategy1Subgroup', verbose_name='content object')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Group',
                                            verbose_name='group')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.Permission',
                                                 verbose_name='permission')),
            ],
            options={
                'verbose_name': 'strategy1 subgroups - group permission',
                'verbose_name_plural': 'strategy1 subgroups - group permissions',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Strategy1SubgroupUserObjectPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_object_permissions',
                                   to='strategies.Strategy1Subgroup', verbose_name='content object')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Member',
                                             verbose_name='member')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.Permission',
                                                 verbose_name='permission')),
            ],
            options={
                'verbose_name': 'strategy1 subgroups - user permission',
                'verbose_name_plural': 'strategy1 subgroups - user permissions',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Strategy2Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_code', models.CharField(blank=True, max_length=25, null=True, verbose_name='user code')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('short_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='short name')),
                ('public_name',
                 models.CharField(blank=True, help_text='used if user does not have permissions to view object',
                                  max_length=255, null=True, verbose_name='public name')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('master_user',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='strategy2_groups',
                                   to='users.MasterUser', verbose_name='master user')),
            ],
            options={
                'verbose_name': 'strategy2 group',
                'verbose_name_plural': 'strategy2 groups',
                'abstract': False,
                'permissions': [('view_strategy2group', 'Can view strategy2 group'),
                                ('manage_strategy2group', 'Can manage strategy2 group')],
            },
        ),
        migrations.CreateModel(
            name='Strategy2GroupGroupObjectPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_object_permissions',
                                   to='strategies.Strategy2Group', verbose_name='content object')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Group',
                                            verbose_name='group')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.Permission',
                                                 verbose_name='permission')),
            ],
            options={
                'verbose_name': 'strategy2 groups - group permission',
                'verbose_name_plural': 'strategy2 groups - group permissions',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Strategy2GroupUserObjectPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_object_permissions',
                                   to='strategies.Strategy2Group', verbose_name='content object')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Member',
                                             verbose_name='member')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.Permission',
                                                 verbose_name='permission')),
            ],
            options={
                'verbose_name': 'strategy2 groups - user permission',
                'verbose_name_plural': 'strategy2 groups - user permissions',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Strategy2Subgroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_code', models.CharField(blank=True, max_length=25, null=True, verbose_name='user code')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('short_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='short name')),
                ('public_name',
                 models.CharField(blank=True, help_text='used if user does not have permissions to view object',
                                  max_length=255, null=True, verbose_name='public name')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT,
                                            related_name='subgroups', to='strategies.Strategy2Group')),
            ],
            options={
                'verbose_name': 'strategy2 subgroup',
                'verbose_name_plural': 'strategy2 subgroups',
                'abstract': False,
                'permissions': [('view_strategy2subgroup', 'Can view strategy2 subgroup'),
                                ('manage_strategy2subgroup', 'Can manage strategy2 subgroup')],
            },
        ),
        migrations.CreateModel(
            name='Strategy2SubgroupGroupObjectPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_object_permissions',
                                   to='strategies.Strategy2Subgroup', verbose_name='content object')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Group',
                                            verbose_name='group')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.Permission',
                                                 verbose_name='permission')),
            ],
            options={
                'verbose_name': 'strategy2 subgroups - group permission',
                'verbose_name_plural': 'strategy2 subgroups - group permissions',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Strategy2SubgroupUserObjectPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_object_permissions',
                                   to='strategies.Strategy2Subgroup', verbose_name='content object')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Member',
                                             verbose_name='member')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.Permission',
                                                 verbose_name='permission')),
            ],
            options={
                'verbose_name': 'strategy2 subgroups - user permission',
                'verbose_name_plural': 'strategy2 subgroups - user permissions',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Strategy3Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_code', models.CharField(blank=True, max_length=25, null=True, verbose_name='user code')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('short_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='short name')),
                ('public_name',
                 models.CharField(blank=True, help_text='used if user does not have permissions to view object',
                                  max_length=255, null=True, verbose_name='public name')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('master_user',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='strategy3_groups',
                                   to='users.MasterUser', verbose_name='master user')),
            ],
            options={
                'verbose_name': 'strategy3 group',
                'verbose_name_plural': 'strategy3 groups',
                'abstract': False,
                'permissions': [('view_strategy3group', 'Can view strategy3 group'),
                                ('manage_strategy3group', 'Can manage strategy3 group')],
            },
        ),
        migrations.CreateModel(
            name='Strategy3GroupGroupObjectPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_object_permissions',
                                   to='strategies.Strategy3Group', verbose_name='content object')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Group',
                                            verbose_name='group')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.Permission',
                                                 verbose_name='permission')),
            ],
            options={
                'verbose_name': 'strategy3 groups - group permission',
                'verbose_name_plural': 'strategy3 groups - group permissions',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Strategy3GroupUserObjectPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_object_permissions',
                                   to='strategies.Strategy3Group', verbose_name='content object')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Member',
                                             verbose_name='member')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.Permission',
                                                 verbose_name='permission')),
            ],
            options={
                'verbose_name': 'strategy3 groups - user permission',
                'verbose_name_plural': 'strategy3 groups - user permissions',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Strategy3Subgroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_code', models.CharField(blank=True, max_length=25, null=True, verbose_name='user code')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('short_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='short name')),
                ('public_name',
                 models.CharField(blank=True, help_text='used if user does not have permissions to view object',
                                  max_length=255, null=True, verbose_name='public name')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT,
                                            related_name='subgroups', to='strategies.Strategy3Group')),
            ],
            options={
                'verbose_name': 'strategy3 subgroup',
                'verbose_name_plural': 'strategy3 subgroups',
                'abstract': False,
                'permissions': [('view_strategy3subgroup', 'Can view strategy3 subgroup'),
                                ('manage_strategy3subgroup', 'Can manage strategy3 subgroup')],
            },
        ),
        migrations.CreateModel(
            name='Strategy3SubgroupGroupObjectPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_object_permissions',
                                   to='strategies.Strategy3Subgroup', verbose_name='content object')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Group',
                                            verbose_name='group')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.Permission',
                                                 verbose_name='permission')),
            ],
            options={
                'verbose_name': 'strategy3 subgroups - group permission',
                'verbose_name_plural': 'strategy3 subgroups - group permissions',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Strategy3SubgroupUserObjectPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_object_permissions',
                                   to='strategies.Strategy3Subgroup', verbose_name='content object')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Member',
                                             verbose_name='member')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.Permission',
                                                 verbose_name='permission')),
            ],
            options={
                'verbose_name': 'strategy3 subgroups - user permission',
                'verbose_name_plural': 'strategy3 subgroups - user permissions',
                'abstract': False,
            },
        ),
        migrations.AlterModelOptions(
            name='strategy1',
            options={
                'permissions': [('view_strategy1', 'Can view strategy1'), ('manage_strategy1', 'Can manage strategy1')],
                'verbose_name': 'strategy1', 'verbose_name_plural': 'strategies1'},
        ),
        migrations.AlterModelOptions(
            name='strategy1groupobjectpermission',
            options={'verbose_name': 'strategies - group permission',
                     'verbose_name_plural': 'strategies - group permissions'},
        ),
        migrations.AlterModelOptions(
            name='strategy1userobjectpermission',
            options={'verbose_name': 'strategies - user permission',
                     'verbose_name_plural': 'strategies - user permissions'},
        ),
        migrations.AlterModelOptions(
            name='strategy2',
            options={
                'permissions': [('view_strategy2', 'Can view strategy2'), ('manage_strategy2', 'Can manage strategy2')],
                'verbose_name': 'strategy2', 'verbose_name_plural': 'strategies2'},
        ),
        migrations.AlterModelOptions(
            name='strategy2groupobjectpermission',
            options={'verbose_name': 'strategies - group permission',
                     'verbose_name_plural': 'strategies - group permissions'},
        ),
        migrations.AlterModelOptions(
            name='strategy2userobjectpermission',
            options={'verbose_name': 'strategies - user permission',
                     'verbose_name_plural': 'strategies - user permissions'},
        ),
        migrations.AlterModelOptions(
            name='strategy3',
            options={
                'permissions': [('view_strategy3', 'Can view strategy3'), ('manage_strategy3', 'Can manage strategy3')],
                'verbose_name': 'strategy3', 'verbose_name_plural': 'strategies3'},
        ),
        migrations.AlterModelOptions(
            name='strategy3groupobjectpermission',
            options={'verbose_name': 'strategies - group permission',
                     'verbose_name_plural': 'strategies - group permissions'},
        ),
        migrations.AlterModelOptions(
            name='strategy3userobjectpermission',
            options={'verbose_name': 'strategies - user permission',
                     'verbose_name_plural': 'strategies - user permissions'},
        ),
        migrations.AlterModelManagers(
            name='strategy1',
            managers=[
            ],
        ),
        migrations.AlterModelManagers(
            name='strategy2',
            managers=[
            ],
        ),
        migrations.AlterModelManagers(
            name='strategy3',
            managers=[
            ],
        ),
        migrations.AddField(
            model_name='strategy1',
            name='subgroup',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT,
                                    related_name='strategies', to='strategies.Strategy1Subgroup'),
        ),
        migrations.AddField(
            model_name='strategy2',
            name='subgroup',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT,
                                    related_name='strategies', to='strategies.Strategy2Subgroup'),
        ),
        migrations.AddField(
            model_name='strategy3',
            name='subgroup',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT,
                                    related_name='strategies', to='strategies.Strategy3Subgroup'),
        ),

        migrations.AlterUniqueTogether(
            name='strategy3',
            unique_together=set([('subgroup', 'user_code')]),
        ),
        migrations.AlterUniqueTogether(
            name='strategy3subgroupuserobjectpermission',
            unique_together=set([('content_object', 'member', 'permission')]),
        ),
        migrations.AlterUniqueTogether(
            name='strategy3subgroupgroupobjectpermission',
            unique_together=set([('content_object', 'group', 'permission')]),
        ),
        migrations.AlterUniqueTogether(
            name='strategy3subgroup',
            unique_together=set([('group', 'user_code')]),
        ),
        migrations.AlterUniqueTogether(
            name='strategy3groupuserobjectpermission',
            unique_together=set([('content_object', 'member', 'permission')]),
        ),
        migrations.AlterUniqueTogether(
            name='strategy3groupgroupobjectpermission',
            unique_together=set([('content_object', 'group', 'permission')]),
        ),
        migrations.AlterUniqueTogether(
            name='strategy3group',
            unique_together=set([('master_user', 'user_code')]),
        ),
        migrations.AlterUniqueTogether(
            name='strategy2subgroupuserobjectpermission',
            unique_together=set([('content_object', 'member', 'permission')]),
        ),
        migrations.AlterUniqueTogether(
            name='strategy2subgroupgroupobjectpermission',
            unique_together=set([('content_object', 'group', 'permission')]),
        ),
        migrations.AlterUniqueTogether(
            name='strategy2subgroup',
            unique_together=set([('group', 'user_code')]),
        ),
        migrations.AlterUniqueTogether(
            name='strategy2groupuserobjectpermission',
            unique_together=set([('content_object', 'member', 'permission')]),
        ),
        migrations.AlterUniqueTogether(
            name='strategy2groupgroupobjectpermission',
            unique_together=set([('content_object', 'group', 'permission')]),
        ),
        migrations.AlterUniqueTogether(
            name='strategy2group',
            unique_together=set([('master_user', 'user_code')]),
        ),
        migrations.AlterUniqueTogether(
            name='strategy1subgroupuserobjectpermission',
            unique_together=set([('content_object', 'member', 'permission')]),
        ),
        migrations.AlterUniqueTogether(
            name='strategy1subgroupgroupobjectpermission',
            unique_together=set([('content_object', 'group', 'permission')]),
        ),
        migrations.AlterUniqueTogether(
            name='strategy1subgroup',
            unique_together=set([('group', 'user_code')]),
        ),
        migrations.AlterUniqueTogether(
            name='strategy1groupuserobjectpermission',
            unique_together=set([('content_object', 'member', 'permission')]),
        ),
        migrations.AlterUniqueTogether(
            name='strategy1groupgroupobjectpermission',
            unique_together=set([('content_object', 'group', 'permission')]),
        ),
        migrations.AlterUniqueTogether(
            name='strategy1group',
            unique_together=set([('master_user', 'user_code')]),
        ),
        migrations.AlterUniqueTogether(
            name='strategy2',
            unique_together=set([('subgroup', 'user_code')]),
        ),
        migrations.AlterUniqueTogether(
            name='strategy1',
            unique_together=set([('subgroup', 'user_code')]),
        ),

        migrations.RemoveField(
            model_name='strategy1',
            name='level',
        ),
        migrations.RemoveField(
            model_name='strategy1',
            name='lft',
        ),
        migrations.RemoveField(
            model_name='strategy1',
            name='master_user',
        ),
        migrations.RemoveField(
            model_name='strategy1',
            name='parent',
        ),
        migrations.RemoveField(
            model_name='strategy1',
            name='rght',
        ),
        migrations.RemoveField(
            model_name='strategy1',
            name='tree_id',
        ),
        migrations.RemoveField(
            model_name='strategy2',
            name='level',
        ),
        migrations.RemoveField(
            model_name='strategy2',
            name='lft',
        ),
        migrations.RemoveField(
            model_name='strategy2',
            name='master_user',
        ),
        migrations.RemoveField(
            model_name='strategy2',
            name='parent',
        ),
        migrations.RemoveField(
            model_name='strategy2',
            name='rght',
        ),
        migrations.RemoveField(
            model_name='strategy2',
            name='tree_id',
        ),
        migrations.RemoveField(
            model_name='strategy3',
            name='level',
        ),
        migrations.RemoveField(
            model_name='strategy3',
            name='lft',
        ),
        migrations.RemoveField(
            model_name='strategy3',
            name='master_user',
        ),
        migrations.RemoveField(
            model_name='strategy3',
            name='parent',
        ),
        migrations.RemoveField(
            model_name='strategy3',
            name='rght',
        ),
        migrations.RemoveField(
            model_name='strategy3',
            name='tree_id',
        ),
    ]

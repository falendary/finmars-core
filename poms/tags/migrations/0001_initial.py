# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-04-07 06:35
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0012_auto_20160406_0647'),
        ('users', '0016_auto_20160406_0701'),
        ('strategies', '0007_auto_20160404_1051'),
        ('currencies', '0013_remove_currencyhistory_master_user'),
        ('portfolios', '0015_portfolio_strategies'),
        ('counterparties', '0010_auto_20160406_0647'),
        ('instruments', '0029_auto_20160406_1424'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccountTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_code', models.CharField(blank=True, max_length=25, null=True, verbose_name='user code')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('short_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='short name')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('accounts', models.ManyToManyField(blank=True, related_name='tags2', to='accounts.Account')),
                ('master_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='account_tags2', to='users.MasterUser', verbose_name='master user')),
            ],
            options={
                'verbose_name': 'account tag',
                'permissions': [('view_accounttag', 'Can view account tag')],
                'verbose_name_plural': 'account tags',
            },
        ),
        migrations.CreateModel(
            name='CommonTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_code', models.CharField(blank=True, max_length=25, null=True, verbose_name='user code')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('short_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='short name')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('accounts', models.ManyToManyField(blank=True, related_name='common_tags', to='accounts.Account')),
                ('counterparties', models.ManyToManyField(blank=True, related_name='common_tags', to='counterparties.Counterparty')),
                ('currencies', models.ManyToManyField(blank=True, related_name='common_tags', to='currencies.Currency')),
                ('instrument_types', models.ManyToManyField(blank=True, related_name='common_tags', to='instruments.InstrumentType')),
                ('instruments', models.ManyToManyField(blank=True, related_name='common_tags', to='instruments.Instrument')),
                ('master_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='common_tags', to='users.MasterUser', verbose_name='master user')),
                ('portfolios', models.ManyToManyField(blank=True, related_name='common_tags', to='portfolios.Portfolio')),
                ('responsibles', models.ManyToManyField(blank=True, related_name='common_tags', to='counterparties.Responsible')),
                ('strategies', mptt.fields.TreeManyToManyField(blank=True, related_name='common_tags', to='strategies.Strategy')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InstrumentTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_code', models.CharField(blank=True, max_length=25, null=True, verbose_name='user code')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('short_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='short name')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('instruments', models.ManyToManyField(blank=True, related_name='tags2', to='instruments.Instrument')),
                ('master_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instrument_tags2', to='users.MasterUser', verbose_name='master user')),
            ],
            options={
                'verbose_name': 'instrument tag',
                'permissions': [('view_instrumenttag', 'Can view instrument tag')],
                'verbose_name_plural': 'instrument tags',
            },
        ),
        migrations.CreateModel(
            name='InstrumentTypeTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_code', models.CharField(blank=True, max_length=25, null=True, verbose_name='user code')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('short_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='short name')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('instrument_types', models.ManyToManyField(blank=True, related_name='tags2', to='instruments.InstrumentType')),
                ('master_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instrumenttype_tags2', to='users.MasterUser', verbose_name='master user')),
            ],
            options={
                'verbose_name': 'instrument type tag',
                'permissions': [('view_instrumenttypetag', 'Can view instrument type tag')],
                'verbose_name_plural': 'instrument type tags',
            },
        ),
        migrations.CreateModel(
            name='PortfolioTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_code', models.CharField(blank=True, max_length=25, null=True, verbose_name='user code')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('short_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='short name')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('master_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='portfolio_tags2', to='users.MasterUser', verbose_name='master user')),
                ('portfolios', models.ManyToManyField(blank=True, related_name='tags2', to='portfolios.Portfolio')),
            ],
            options={
                'verbose_name': 'portfolio tag',
                'permissions': [('view_portfoliotag', 'Can view portfolio tag')],
                'verbose_name_plural': 'portfolio tags',
            },
        ),
        migrations.AlterUniqueTogether(
            name='portfoliotag',
            unique_together=set([('master_user', 'user_code'), ('master_user', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='instrumenttypetag',
            unique_together=set([('master_user', 'user_code'), ('master_user', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='instrumenttag',
            unique_together=set([('master_user', 'user_code'), ('master_user', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='accounttag',
            unique_together=set([('master_user', 'user_code'), ('master_user', 'name')]),
        ),
    ]

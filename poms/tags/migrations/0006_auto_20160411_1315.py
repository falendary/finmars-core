# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-04-11 13:15
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0016_auto_20160411_1311'),
        ('instruments', '0033_auto_20160411_1311'),
        ('auth', '0007_alter_validators_add_error_messages'),
        ('currencies', '0013_remove_currencyhistory_master_user'),
        ('transactions', '0030_auto_20160411_1311'),
        ('counterparties', '0012_auto_20160411_1247'),
        ('strategies', '0007_auto_20160404_1051'),
        ('users', '0018_auto_20160407_0945'),
        ('portfolios', '0019_auto_20160411_1311'),
        ('tags', '0005_auto_20160411_1129'),
    ]

    operations = [
        migrations.CreateModel(
            name='TagGroupObjectPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TagUserObjectPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='tag2',
            name='accounts',
        ),
        migrations.RemoveField(
            model_name='tag2',
            name='content_type',
        ),
        migrations.RemoveField(
            model_name='tag2',
            name='counterparties',
        ),
        migrations.RemoveField(
            model_name='tag2',
            name='currencies',
        ),
        migrations.RemoveField(
            model_name='tag2',
            name='instrument_types',
        ),
        migrations.RemoveField(
            model_name='tag2',
            name='instruments',
        ),
        migrations.RemoveField(
            model_name='tag2',
            name='master_user',
        ),
        migrations.RemoveField(
            model_name='tag2',
            name='portfolios',
        ),
        migrations.RemoveField(
            model_name='tag2',
            name='responsibles',
        ),
        migrations.RemoveField(
            model_name='tag2',
            name='strategies',
        ),
        migrations.RemoveField(
            model_name='tag2',
            name='transaction_types',
        ),
        migrations.RemoveField(
            model_name='taggedobject',
            name='content_type',
        ),
        migrations.RemoveField(
            model_name='taggedobject',
            name='tag',
        ),
        migrations.AddField(
            model_name='tag',
            name='accounts',
            field=models.ManyToManyField(blank=True, related_name='tags', to='accounts.Account'),
        ),
        migrations.AddField(
            model_name='tag',
            name='counterparties',
            field=models.ManyToManyField(blank=True, related_name='tags', to='counterparties.Counterparty'),
        ),
        migrations.AddField(
            model_name='tag',
            name='currencies',
            field=models.ManyToManyField(blank=True, related_name='tags', to='currencies.Currency'),
        ),
        migrations.AddField(
            model_name='tag',
            name='instrument_types',
            field=models.ManyToManyField(blank=True, related_name='tags', to='instruments.InstrumentType'),
        ),
        migrations.AddField(
            model_name='tag',
            name='instruments',
            field=models.ManyToManyField(blank=True, related_name='tags', to='instruments.Instrument'),
        ),
        migrations.AddField(
            model_name='tag',
            name='portfolios',
            field=models.ManyToManyField(blank=True, related_name='tags', to='portfolios.Portfolio'),
        ),
        migrations.AddField(
            model_name='tag',
            name='responsibles',
            field=models.ManyToManyField(blank=True, related_name='tags', to='counterparties.Responsible'),
        ),
        migrations.AddField(
            model_name='tag',
            name='strategies',
            field=mptt.fields.TreeManyToManyField(blank=True, related_name='tags', to='strategies.Strategy'),
        ),
        migrations.AddField(
            model_name='tag',
            name='transaction_types',
            field=models.ManyToManyField(blank=True, related_name='tags', to='transactions.TransactionType'),
        ),
        migrations.DeleteModel(
            name='Tag2',
        ),
        migrations.DeleteModel(
            name='TaggedObject',
        ),
        migrations.AddField(
            model_name='taguserobjectpermission',
            name='content_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_object_permissions', to='tags.Tag'),
        ),
        migrations.AddField(
            model_name='taguserobjectpermission',
            name='member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Member'),
        ),
        migrations.AddField(
            model_name='taguserobjectpermission',
            name='permission',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.Permission'),
        ),
        migrations.AddField(
            model_name='taggroupobjectpermission',
            name='content_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_object_permissions', to='tags.Tag'),
        ),
        migrations.AddField(
            model_name='taggroupobjectpermission',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Group'),
        ),
        migrations.AddField(
            model_name='taggroupobjectpermission',
            name='permission',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.Permission'),
        ),
        migrations.AlterUniqueTogether(
            name='taguserobjectpermission',
            unique_together=set([('member', 'content_object', 'permission')]),
        ),
        migrations.AlterUniqueTogether(
            name='taggroupobjectpermission',
            unique_together=set([('group', 'content_object', 'permission')]),
        ),
    ]
